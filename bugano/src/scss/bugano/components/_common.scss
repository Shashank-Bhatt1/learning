.container-main {
    @include media-breakpoint-down(lg) {
        display: flex;
        flex-direction: column;
        height: calc(100vh - 90px);
    }
}

.upload-btn {
    padding-top: 0;
    padding-bottom: 0;
    height: 54px;
    display: inline-flex;
    align-items: center;
    border: none;
    font-size: 13px;
    white-space: initial;
    @include media-breakpoint-down(lg) {
        height: 48px;
    }
}

.form-control,.btn {
    @include media-breakpoint-down(lg) {
        padding: 13px 14px 14px;
    }
}

.upload-btn-group-sticky {
   position: sticky;
   bottom: 0px;
   width: 100%;
}

.linedesign {
    flex-grow: 1;
    margin-right: -($space-block);
    height: 2px;
    background-color: rgba($primary,0.06);

}

.dotted-background {
    position: absolute;
    width: 400px;
    height: 400px;
    top:  -150px;
    right: -150px;
    background-image: url('../../images/dotted-pattern.png');
    background-position: top right;
    z-index: -1;
}

.fadetowhite {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 30px;
    background-image: linear-gradient(0deg, #FFFFFF 0%, #FFFFFF00 100%);
    pointer-events: none;
}
.closebtn {
    position: absolute;
    z-index: 3;
    width: 32px;
    height: 32px;
    top: -8px;
    right: -8px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: $primary;
    border-radius: 100%;
    padding-top: 2px;
    &__link{
        color: $white;
    }
}


.number {
    font-size: 13px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 27px;
    height: 27px;
    background-color: $theme-elegance-primary;
    color: $white;
    border-radius: 100%;

    &.light {
        background-color: #DEDEE8;
        color: $primary;
    }
}

.img-contain {
    object-fit: contain;
}

.img-cover {
    object-fit: cover;
}

.triangle {
    position: absolute;
    width: 16px;
    height: 16px;
    background-color: inherit;

    &.right {
        right: 100%;
        top: 50%;
        transform: translateY(-50%);
        clip-path: polygon(100% 0%, 100% 100%, 0% 50%);
    }
    &.bottom {
        top: 100%;
        left: 50%;
        transform: translateX(-50%);
        clip-path: polygon(0% 0%, 100% 0%, 50% 100%);
    }
   
    
    
    
}

