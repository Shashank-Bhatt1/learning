Solution.

1. Create requirejs-config.js at theme level to mix the mage/validation widget before it is used in magento application.


var config = {
    config: {
        mixins: {
            'mage/validation': {
                'js/mage/jquery-validate-mixin': true
            }
        }
    }
}


2. Now create the actual mixin to work at the specified destination which should be same as path given in mixin. In this case 'js/mage/jquery-validate-mixin'.

define(['jquery'], function ($) {
    'use strict';
    
    return function() {
        $.extend($.validator.prototype,{
           elements: function () {
                var validator = this,
                    rulesCache = {};

                
                //instead of finding only within the form, make every element validate with form attr that are part of the currentForm
                return $.merge($(this.currentForm).find("input, select, textarea"),
                    $( this.currentForm.elements ).filter("input, select, textarea"))
                    .not(":submit, :reset, :image, [disabled]")
                    .not(this.settings.ignore)
                    .filter(function () {
                        if (!this.name && validator.settings.debug && window.console) {
                            console.error("%o has no name assigned", this);
                        }

                        // select only the first element for each name, and only those with rules specified
                        if (this.name in rulesCache || !validator.objectLength($(this).rules())) {
                            return false;
                        }

                        rulesCache[this.name] = true;
                        return true;
                });
            },
        });
        return $.mage.validation;
    }
});


3. Explaination.

Basically this code modified default elements of jquery validator prototype so now it will include not only form inner elements but also those which has the form attribute with the specified form id. 

If we observe then we will find that we have replaced

this code 

=> return $(this.currentForm).find("input, select, textarea")

with this

=> return $.merge($(this.currentForm).find("input, select, textarea"),
                    $( this.currentForm.elements ).filter("input, select, textarea"))


=> HTML5 native Form attribute will bind the element with the form that is being validated. We can check by using elements api of the dom form element which will also show those elements as well which has form attribute.

So moving element out of the form will not stop it from being validated.So that will be helpful.



Note: Form attribute value should be the id of the form to which attachment is needed.


I have attached both the files.




